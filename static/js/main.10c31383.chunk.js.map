{"version":3,"sources":["components/design/Display.js","components/design/Setting.js","config/fierbaseConfig.js","components/dashboard/Dashboard.js","components/store/actions/savedesignAction.js","components/navbar/navbar.js","components/project/ProjectList.js","components/project/projects.js","App.js","serviceWorker.js","components/store/reducers/authReducer.js","components/store/reducers/designReducer.js","components/store/reducers/mainReducer.js","index.js"],"names":["Display","display","textFormat","className","src","tshirtColor","alt","style","fontSize","color","textColor","upperText","url","lowerText","URLIMG","Setting","handelowerText","handeUpperText","handelmemimg","handelTextsize","handelTextcolor","save","onClick","id","type","placeholder","onChange","min","max","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","Dashboard","state","memImg","textSize","handelUpperText","e","setState","target","value","files","image","ref","name","put","on","snapshot","console","log","error","child","getDownloadURL","then","handelsavedesign","props","createDesign","handelTshirtColor","size","this","parseInt","formatSize","Component","connect","dispatch","savedesign","design","getstate","navbar","to","data-toggle","data-target","ProjectList","tshirtcolor","projects","designs","map","key","App","Boolean","window","location","hostname","match","initialState","authreducer","designreducer","action","mainReducer","combineReducers","auth","authReducer","designReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.10c31383.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./display.css\";\r\nexport default function Display({ display, textFormat }) {\r\n  return (\r\n    <div className=\"card card-content\">\r\n      <div className=\"imgTshirt text-center\">\r\n        <img\r\n          className=\"img-responsive\"\r\n          src={`https://res.cloudinary.com/dkkgmzpqd/image/upload/v1545217305/T-shirt%20Images/${display.tshirtColor}`}\r\n          alt=\"img tshirt\"\r\n        />\r\n      </div>\r\n      <div className=\"text-center memeText\">\r\n        <div className=\"upperText\">\r\n          <p style={{ fontSize: textFormat, color: display.textColor }}>\r\n            {display.upperText}\r\n          </p>\r\n        </div>\r\n        <img\r\n          //||\r\n          src={`${display.url}` || \"http://via.placeholder.com/400x300\"}\r\n          alt=\"meme text\"\r\n        />\r\n        <div className=\"lowerText\">\r\n          <p style={{ fontSize: textFormat, color: display.textColor }}>\r\n            {display.lowerText}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Display from \"./Display\";\r\nconst URLIMG =\r\n  \"https://res.cloudinary.com/dkkgmzpqd/image/upload/v1545217305/T-shirt%20Images/\";\r\nexport default function Setting({\r\n  color,\r\n  handelowerText,\r\n  handeUpperText,\r\n  handelmemimg,\r\n  handelTextsize,\r\n  handelTextcolor,\r\n  save,\r\n}) {\r\n  return (\r\n    <div className=\"card bg-light-gray container\">\r\n      <h3 className=\"text-center\">Settings</h3>\r\n      <h4>Change T-shirt Color</h4>\r\n      <div className=\"tshirt-color\">\r\n        <img\r\n          onClick={color}\r\n          src={`${URLIMG}white.png`}\r\n          alt=\"white tshirt\"\r\n          id=\"white\"\r\n        />\r\n        <img\r\n          onClick={color}\r\n          src={`${URLIMG}black.png`}\r\n          alt=\"black tshirt\"\r\n          id=\"black\"\r\n        />\r\n        <img\r\n          onClick={color}\r\n          src={`${URLIMG}grey.png`}\r\n          alt=\"grey tshirt\"\r\n          id=\"grey\"\r\n        />\r\n        <img\r\n          onClick={color}\r\n          src={`${URLIMG}red.png`}\r\n          alt=\"red tshirt\"\r\n          id=\"red\"\r\n        />\r\n        <img\r\n          onClick={color}\r\n          src={`${URLIMG}blue.png`}\r\n          alt=\"bluetshirt\"\r\n          id=\"blue\"\r\n        />\r\n      </div>\r\n      <hr />\r\n      <h4>Write Text</h4>\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control form-control-sm mb-2\"\r\n        placeholder=\"upper text\"\r\n        onChange={handeUpperText}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control form-control-sm \"\r\n        placeholder=\"lower text\"\r\n        onChange={handelowerText}\r\n      />\r\n      <hr />\r\n      <h4>Add image</h4>\r\n      <div className=\"form-group\">\r\n        {\" \"}\r\n        <input\r\n          onChange={handelmemimg}\r\n          type=\"file\"\r\n          className=\"form-control-file mb-2\"\r\n        />\r\n      </div>\r\n      <hr />\r\n      <h4>Size Text</h4>\r\n      <input type=\"range\" onChange={handelTextsize} min=\"13\" max=\"30\" />\r\n      <hr />\r\n      <h4>Text Color</h4>\r\n      <select\r\n        className=\"form-control form-control-sm mb-2\"\r\n        onChange={handelTextcolor}\r\n      >\r\n        <option>White</option>\r\n        <option>Black</option>\r\n        <option>Grey</option>\r\n        <option>Red</option>\r\n        <option>Blue</option>\r\n      </select>\r\n      <hr />\r\n      <button className=\"btn btn-primary btn-sm \" id=\"save\" onClick={save}>\r\n        {\" \"}\r\n        Save\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB5h-rTBezUGVOwyg41K692fnhD2qBaLNA\",\r\n  authDomain: \"mytshirtapp-311c5.firebaseapp.com\",\r\n  databaseURL: \"https://mytshirtapp-311c5.firebaseio.com\",\r\n  projectId: \"mytshirtapp-311c5\",\r\n  storageBucket: \"mytshirtapp-311c5.appspot.com\",\r\n  messagingSenderId: \"545981564081\",\r\n  appId: \"1:545981564081:web:e3b01dc8c0456b58cfce90\",\r\n  measurementId: \"G-0P4961NXPX\",\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nconst storage = firebase.storage();\r\n\r\nexport { storage, firebase as default };\r\n","import React, { Component } from \"react\";\r\nimport Display from \"./../design/Display\";\r\nimport Setting from \"./../design/Setting\";\r\nimport { storage } from \"./../../config/fierbaseConfig\";\r\nimport { savedesign } from \"./../store/actions/savedesignAction\";\r\nimport { connect } from \"react-redux\";\r\nclass Dashboard extends Component {\r\n  state = {\r\n    upperText: \"this is upper text\",\r\n    lowerText: \"this is lower text\",\r\n    tshirtColor: \"black\",\r\n    memImg: \"\",\r\n    url: \"\",\r\n    textSize: 40,\r\n    textColor: \"\",\r\n  };\r\n  handelUpperText = (e) => {\r\n    this.setState({ upperText: e.target.value });\r\n  };\r\n  handelTextcolor = (e) => {\r\n    this.setState({ textColor: e.target.value });\r\n  };\r\n  handelTextsize = (e) => {\r\n    this.setState({ textSize: e.target.value });\r\n  };\r\n  handelowerText = (e) => {\r\n    this.setState({ lowerText: e.target.value });\r\n  };\r\n  handelmemimg = (e) => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n      uploadTask.on(\r\n        \"state change\",\r\n        (snapshot) => {\r\n          console.log(snapshot);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        },\r\n        () => {\r\n          storage\r\n            .ref(\"images\")\r\n            .child(image.name)\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              this.setState({ url });\r\n            });\r\n        }\r\n      );\r\n    }\r\n  };\r\n  handelsavedesign = (e) => {\r\n    if (e.target.id === \"save\") {\r\n      this.props.createDesign(this.state);\r\n    }\r\n  };\r\n  handelTshirtColor = (e) => {\r\n    this.setState({ tshirtColor: e.target.id });\r\n  };\r\n  formatSize(e) {\r\n    const size = this.state.textSize;\r\n    return parseInt(size);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container py-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-8\">\r\n            {\" \"}\r\n            <Display display={this.state} textFormat={this.formatSize()} />\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            {\" \"}\r\n            <Setting\r\n              color={this.handelTshirtColor}\r\n              handeUpperText={this.handelUpperText}\r\n              handelowerText={this.handelowerText}\r\n              handelmemimg={this.handelmemimg}\r\n              handelTextsize={this.handelTextsize}\r\n              handelTextcolor={this.handelTextcolor}\r\n              save={this.handelsavedesign}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst dispatchmaptoprop = (dispatch) => {\r\n  return {\r\n    savedesign: (design) => {\r\n      dispatch(savedesign(design));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(null, dispatchmaptoprop)(Dashboard);\r\n","export const savedesign = (design) => {\r\n  return (dispatch, getstate) => {\r\n    dispatch({ type: \"save product\", design });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nclass navbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-primary\">\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className=\"navbar-brand text-white\">\r\n            Tshirt-memes-design\r\n          </Link>\r\n          <button\r\n            type=\"button\"\r\n            className=\"navbar-toggler\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"navbarNav\"\r\n          ></button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            {\" \"}\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/\" className=\"nav-link\">\r\n                  Sign Up\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/\" className=\"nav-link\">\r\n                  LogIN\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default navbar;\r\n","import React from \"react\";\r\nconst img =\r\n  \"https://res.cloudinary.com/dkkgmzpqd/image/upload/v1545217305/T-shirt%20Images/\";\r\nexport default function ProjectList({ design }) {\r\n  return (\r\n    <div className=\"item text-center\">\r\n      <div className=\"card card-body\">\r\n        <img\r\n          className=\"img-fluid\"\r\n          src={`${img}${design.tshirtcolor}`}\r\n          alt=\"Tshirt\"\r\n        />\r\n        <p>design.name</p>\r\n        <button className=\"btn btn-sm btn-primary\">View</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ProjectList from \"./ProjectList\";\r\nimport { connect } from \"react-redux\";\r\nclass projects extends Component {\r\n  render() {\r\n    const { designs } = this.props;\r\n    return (\r\n      <div className=\"container mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"projectList\">\r\n            {designs &&\r\n              designs.map((design) => {\r\n                return <ProjectList design={design} key={design.id} />;\r\n              })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapstatetoprops = (state) => {\r\n  return {\r\n    design: state.design.designs,\r\n  };\r\n};\r\nexport default connect(mapstatetoprops)(projects);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport Navbar from \"./components/navbar/navbar\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Project from \"./components/project/projects\";\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Dashboard />\n        <Project />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {};\r\n\r\nconst authreducer = (state = initialState, action) => {\r\n  return state;\r\n};\r\nexport default authreducer;\r\n","const initialState = {\r\n  design: [\r\n    { id: 1, name: \"project one\", tshirtcolor: \"black\" },\r\n    { id: 2, name: \"project tow\", tshirtcolor: \"blue\" },\r\n  ],\r\n};\r\n\r\nconst designreducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"save product\":\r\n      console.log(\"design\", action.design);\r\n  }\r\n  return state;\r\n};\r\nexport default designreducer;\r\n","import authReducer from \"./authReducer\";\r\nimport designReducer from \"./designReducer\";\r\nimport { combineReducers } from \"redux\";\r\nconst mainReducer = combineReducers({\r\n  auth: authReducer,\r\n  design: designReducer,\r\n});\r\nexport default mainReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport mainReducer from \"./components/store/reducers/mainReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(mainReducer, applyMiddleware(thunk));\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}